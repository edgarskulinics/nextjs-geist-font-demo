{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/send-email/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport nodemailer from 'nodemailer';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { to, from, subject, html, attachments, smtp } = body;\n\n    // Validācija\n    if (!to || !from || !subject || !smtp) {\n      return NextResponse.json(\n        { error: 'Trūkst obligāto parametru' },\n        { status: 400 }\n      );\n    }\n\n    // Izveido SMTP transportu\n    const transporter = nodemailer.createTransport({\n      host: smtp.host,\n      port: smtp.port,\n      secure: smtp.secure, // true for 465, false for other ports\n      auth: {\n        user: smtp.auth.user,\n        pass: smtp.auth.pass,\n      },\n      // Papildu konfigurācija drošībai\n      tls: {\n        rejectUnauthorized: false\n      }\n    });\n\n    // Sagatavo e-pasta opcijas\n    const mailOptions: any = {\n      from: from,\n      to: to,\n      subject: subject,\n      html: html,\n    };\n\n    // Pievieno pielikumus, ja tie ir\n    if (attachments && attachments.length > 0) {\n      mailOptions.attachments = attachments.map((attachment: any) => ({\n        filename: attachment.filename,\n        content: attachment.content,\n        encoding: 'base64',\n        contentType: attachment.type || 'application/pdf'\n      }));\n    }\n\n    // Sūta e-pastu\n    const info = await transporter.sendMail(mailOptions);\n\n    console.log('E-pasts nosūtīts:', info.messageId);\n\n    return NextResponse.json(\n      { \n        success: true, \n        messageId: info.messageId,\n        message: 'E-pasts veiksmīgi nosūtīts'\n      },\n      { status: 200 }\n    );\n\n  } catch (error: any) {\n    console.error('Kļūda e-pasta sūtīšanā:', error);\n    \n    // Atgriež detalizētu kļūdas ziņojumu\n    let errorMessage = 'Nezināma kļūda e-pasta sūtīšanā';\n    \n    if (error.code === 'EAUTH') {\n      errorMessage = 'Autentifikācijas kļūda. Pārbaudiet e-pasta adresi un paroli.';\n    } else if (error.code === 'ECONNECTION') {\n      errorMessage = 'Nevar izveidot savienojumu ar SMTP serveri. Pārbaudiet servera adresi un portu.';\n    } else if (error.code === 'ETIMEDOUT') {\n      errorMessage = 'Savienojuma noildze. Pārbaudiet interneta savienojumu.';\n    } else if (error.responseCode === 535) {\n      errorMessage = 'Nepareiza parole vai nav atļauts piekļūt. Gmail lietotājiem: izmantojiet App Password.';\n    } else if (error.message) {\n      errorMessage = error.message;\n    }\n\n    return NextResponse.json(\n      { \n        error: errorMessage,\n        details: process.env.NODE_ENV === 'development' ? error.toString() : undefined\n      },\n      { status: 500 }\n    );\n  }\n}\n\n// Atbalsta tikai POST metodi\nexport async function GET() {\n  return NextResponse.json(\n    { error: 'Metode nav atbalstīta' },\n    { status: 405 }\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG;QAEvD,aAAa;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA4B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,0BAA0B;QAC1B,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;YAC7C,MAAM,KAAK,IAAI;YACf,MAAM,KAAK,IAAI;YACf,QAAQ,KAAK,MAAM;YACnB,MAAM;gBACJ,MAAM,KAAK,IAAI,CAAC,IAAI;gBACpB,MAAM,KAAK,IAAI,CAAC,IAAI;YACtB;YACA,iCAAiC;YACjC,KAAK;gBACH,oBAAoB;YACtB;QACF;QAEA,2BAA2B;QAC3B,MAAM,cAAmB;YACvB,MAAM;YACN,IAAI;YACJ,SAAS;YACT,MAAM;QACR;QAEA,iCAAiC;QACjC,IAAI,eAAe,YAAY,MAAM,GAAG,GAAG;YACzC,YAAY,WAAW,GAAG,YAAY,GAAG,CAAC,CAAC,aAAoB,CAAC;oBAC9D,UAAU,WAAW,QAAQ;oBAC7B,SAAS,WAAW,OAAO;oBAC3B,UAAU;oBACV,aAAa,WAAW,IAAI,IAAI;gBAClC,CAAC;QACH;QAEA,eAAe;QACf,MAAM,OAAO,MAAM,YAAY,QAAQ,CAAC;QAExC,QAAQ,GAAG,CAAC,qBAAqB,KAAK,SAAS;QAE/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,WAAW,KAAK,SAAS;YACzB,SAAS;QACX,GACA;YAAE,QAAQ;QAAI;IAGlB,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,2BAA2B;QAEzC,qCAAqC;QACrC,IAAI,eAAe;QAEnB,IAAI,MAAM,IAAI,KAAK,SAAS;YAC1B,eAAe;QACjB,OAAO,IAAI,MAAM,IAAI,KAAK,eAAe;YACvC,eAAe;QACjB,OAAO,IAAI,MAAM,IAAI,KAAK,aAAa;YACrC,eAAe;QACjB,OAAO,IAAI,MAAM,YAAY,KAAK,KAAK;YACrC,eAAe;QACjB,OAAO,IAAI,MAAM,OAAO,EAAE;YACxB,eAAe,MAAM,OAAO;QAC9B;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,OAAO;YACP,SAAS,uCAAyC,MAAM,QAAQ;QAClE,GACA;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe;IACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;QAAE,OAAO;IAAwB,GACjC;QAAE,QAAQ;IAAI;AAElB","debugId":null}}]
}